---
Description: >-
  An AWS VPC with three subnets.
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Environment:
    Description: "Environment Name"
    Type: String
    Default: PRACTICE
  Course:
    Description: "Linux Academy"
    Type: String
    Default: LinuxAcademy
  

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.99.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref InternetGateway
  EIP:
    Type: AWS:EC2:EIP
    Properties:
      Domain: vpc
  NATGateway:
    Type: AWS:EC2:NatGateway
    Properties:
      AllocationID: !GetAtt 'EIP.AllocationId'
      SubnetId: 
  SubnetDMZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, DMZ1Public ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  SubnetDMZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, DMZ2Public ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  SubnetApp1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.11.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, AppLayer1private ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  SubnetApp2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.12.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, AppLayer2private ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  SubnetDB1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.21.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, DBLayer1private ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  SubnetDB2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.99.22.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course, DBLayer2private ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetDMZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetDMZ1
  SubnetDMZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetDMZ2
  SubnetApp1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetApp1
  SubnetApp2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetApp2
  SubnetDB1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetDB1
  SubnetDB2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetDB2
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Internet Group"
      GroupDescription: "SSH traffic in, all traffic out."
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key:                   "Name"
          Value:                 !Join [ "-", [ !Ref Environment, !Ref Course ] ]

        - Key:                    Course
          Value:                  !Ref Course

        - Key:                    Environment
          Value:                  !Ref Environment
